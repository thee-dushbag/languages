class Zoo {
  init() {
    this.fox = 1;
    this.cat = 1;
    this.baboon = 1;
    this.donkey = 1;
    this.aardvark = 1;
    this.elephant = 1;
  }
  tuna() { return this.cat; }
  mouse() { return this.fox; }
  hay() { return this.donkey; }
  ant() { return this.aardvark; }
  banana() { return this.baboon; }
  grass() { return this.elephant; }
}

fun instances(total) {
  var sum = 0;
  while (sum < total)
    sum = sum
        + Zoo().hay()
        + Zoo().ant()
        + Zoo().tuna()
        + Zoo().mouse()
        + Zoo().grass()
        + Zoo().banana();
  return sum;
}

fun instance(total) {
  var sum = 0;
  var zoo = Zoo();
  while (sum < total)
    sum = sum
        + zoo.hay()
        + zoo.ant()
        + zoo.tuna()
        + zoo.mouse()
        + zoo.grass()
        + zoo.banana();
  return sum;
}

fun churn_dots(runner, total) {
  total = total or 70000000;
  var start = clock();
  var sum = runner(total);
  print clock() - start;
  print sum;
}

churn_dots(instance, nil);

fun sum_of(n) { return (n * (n + 1)) / 2; }

fun spin(n) {
  n = n or 5;
  var start = clock();
  for (var idx = n; idx; idx = idx - 1)
    sleep(idx);
  var end = clock();
  print "Slept for";
  print end - start;
  print "Should be";
  print sum_of(n);
}

// spin(nil);
